import { Component, Inject } from '@angular/core';
import { MAT_SNACK_BAR_DATA, } from '@angular/material/snack-bar';
import * as i0 from "@angular/core";
import * as i1 from "@angular/material/snack-bar";
import * as i2 from "@angular/common";
import * as i3 from "@angular/material/button";
import * as i4 from "@angular/material/icon";
function NotificationHandlerComponent_div_3_Template(rf, ctx) { if (rf & 1) {
    const _r2 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "div", 3);
    i0.ɵɵelementStart(1, "button", 4);
    i0.ɵɵlistener("click", function NotificationHandlerComponent_div_3_Template_button_click_1_listener() { i0.ɵɵrestoreView(_r2); const ctx_r1 = i0.ɵɵnextContext(); return ctx_r1.snackBarRef.dismiss(); });
    i0.ɵɵelementStart(2, "mat-icon");
    i0.ɵɵtext(3, "close");
    i0.ɵɵelementEnd();
    i0.ɵɵelementEnd();
    i0.ɵɵelementEnd();
} }
// TODO ngMAterial change the way to work with color (.inform => background-color: primary; )
export class NotificationHandlerComponent {
    constructor(snackBarRef, data) {
        this.snackBarRef = snackBarRef;
        this.data = data;
    }
}
NotificationHandlerComponent.ɵfac = function NotificationHandlerComponent_Factory(t) { return new (t || NotificationHandlerComponent)(i0.ɵɵdirectiveInject(i1.MatSnackBarRef), i0.ɵɵdirectiveInject(MAT_SNACK_BAR_DATA)); };
NotificationHandlerComponent.ɵcmp = i0.ɵɵdefineComponent({ type: NotificationHandlerComponent, selectors: [["ngy-notification-handler"]], decls: 4, vars: 2, consts: [[1, "container"], [2, "margin-left", "8px", "margin-right", "8px"], ["class", "dismiss", 4, "ngIf"], [1, "dismiss"], ["mat-mini-fab", "", 3, "click"]], template: function NotificationHandlerComponent_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "div", 0);
        i0.ɵɵelementStart(1, "div", 1);
        i0.ɵɵtext(2);
        i0.ɵɵelementEnd();
        i0.ɵɵtemplate(3, NotificationHandlerComponent_div_3_Template, 4, 0, "div", 2);
        i0.ɵɵelementEnd();
    } if (rf & 2) {
        i0.ɵɵadvance(2);
        i0.ɵɵtextInterpolate1(" ", ctx.data.message, " ");
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx.data.allowDismiss);
    } }, directives: [i2.NgIf, i3.MatButton, i4.MatIcon], styles: [".container[_ngcontent-%COMP%]{align-items:center;display:flex;flex-direction:row}.dismiss[_ngcontent-%COMP%]{margin-left:auto}"] });
/*@__PURE__*/ (function () { i0.ɵsetClassMetadata(NotificationHandlerComponent, [{
        type: Component,
        args: [{
                selector: 'ngy-notification-handler',
                templateUrl: './notification-handler.component.html',
                styleUrls: ['./notification-handler.component.scss'],
            }]
    }], function () { return [{ type: i1.MatSnackBarRef }, { type: undefined, decorators: [{
                type: Inject,
                args: [MAT_SNACK_BAR_DATA]
            }] }]; }, null); })();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm90aWZpY2F0aW9uLWhhbmRsZXIuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbm90aWZpY2F0aW9uLWhhbmRsZXIvc3JjL2xpYi9mZWF0dXJlLW5vdGlmeS9ub3RpZmljYXRpb24taGFuZGxlci9ub3RpZmljYXRpb24taGFuZGxlci5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9ub3RpZmljYXRpb24taGFuZGxlci9zcmMvbGliL2ZlYXR1cmUtbm90aWZ5L25vdGlmaWNhdGlvbi1oYW5kbGVyL25vdGlmaWNhdGlvbi1oYW5kbGVyLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ2xELE9BQU8sRUFFTCxrQkFBa0IsR0FDbkIsTUFBTSw2QkFBNkIsQ0FBQzs7Ozs7Ozs7SUNBbkMsOEJBQ0U7SUFBQSxpQ0FDRTtJQURtQix5S0FBUyw0QkFBcUIsSUFBQztJQUNsRCxnQ0FBVTtJQUFBLHFCQUFLO0lBQUEsaUJBQVc7SUFDNUIsaUJBQVM7SUFDWCxpQkFBTTs7QUREUiw2RkFBNkY7QUFNN0YsTUFBTSxPQUFPLDRCQUE0QjtJQUV2QyxZQUNTLFdBQXlELEVBQzdCLElBQXNCO1FBRGxELGdCQUFXLEdBQVgsV0FBVyxDQUE4QztRQUM3QixTQUFJLEdBQUosSUFBSSxDQUFrQjtJQUN4RCxDQUFDOzt3R0FMTyw0QkFBNEIsZ0VBSTdCLGtCQUFrQjtpRUFKakIsNEJBQTRCO1FDYnpDLDhCQUNFO1FBQUEsOEJBQ0U7UUFBQSxZQUNGO1FBQUEsaUJBQU07UUFDTiw2RUFDRTtRQUlKLGlCQUFNOztRQVBGLGVBQ0Y7UUFERSxpREFDRjtRQUNLLGVBQXlCO1FBQXpCLDRDQUF5Qjs7a0REU25CLDRCQUE0QjtjQUx4QyxTQUFTO2VBQUM7Z0JBQ1QsUUFBUSxFQUFFLDBCQUEwQjtnQkFDcEMsV0FBVyxFQUFFLHVDQUF1QztnQkFDcEQsU0FBUyxFQUFFLENBQUMsdUNBQXVDLENBQUM7YUFDckQ7O3NCQUtJLE1BQU07dUJBQUMsa0JBQWtCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbmplY3QgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7XG4gIE1hdFNuYWNrQmFyUmVmLFxuICBNQVRfU05BQ0tfQkFSX0RBVEEsXG59IGZyb20gJ0Bhbmd1bGFyL21hdGVyaWFsL3NuYWNrLWJhcic7XG5pbXBvcnQgeyBOb3RpZmljYXRpb25JbmZvIH0gZnJvbSAnLi4vbm90aWZpY2F0aW9uLUluZm8uaW50ZXJmYWNlJztcblxuLy8gVE9ETyBuZ01BdGVyaWFsIGNoYW5nZSB0aGUgd2F5IHRvIHdvcmsgd2l0aCBjb2xvciAoLmluZm9ybSA9PiBiYWNrZ3JvdW5kLWNvbG9yOiBwcmltYXJ5OyApXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICduZ3ktbm90aWZpY2F0aW9uLWhhbmRsZXInLFxuICB0ZW1wbGF0ZVVybDogJy4vbm90aWZpY2F0aW9uLWhhbmRsZXIuY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi9ub3RpZmljYXRpb24taGFuZGxlci5jb21wb25lbnQuc2NzcyddLFxufSlcbmV4cG9ydCBjbGFzcyBOb3RpZmljYXRpb25IYW5kbGVyQ29tcG9uZW50IHtcblxuICBjb25zdHJ1Y3RvcihcbiAgICBwdWJsaWMgc25hY2tCYXJSZWY6IE1hdFNuYWNrQmFyUmVmPE5vdGlmaWNhdGlvbkhhbmRsZXJDb21wb25lbnQ+LFxuICAgIEBJbmplY3QoTUFUX1NOQUNLX0JBUl9EQVRBKSBwdWJsaWMgZGF0YTogTm90aWZpY2F0aW9uSW5mb1xuICApIHt9XG59XG4iLCI8ZGl2IGNsYXNzPVwiY29udGFpbmVyXCI+XG4gIDxkaXYgc3R5bGU9XCJtYXJnaW4tbGVmdDogOHB4OyBtYXJnaW4tcmlnaHQ6IDhweDtcIj5cbiAgICB7eyBkYXRhLm1lc3NhZ2UgfX1cbiAgPC9kaXY+XG4gIDxkaXYgKm5nSWY9XCJkYXRhLmFsbG93RGlzbWlzc1wiIGNsYXNzPVwiZGlzbWlzc1wiPlxuICAgIDxidXR0b24gbWF0LW1pbmktZmFiIChjbGljayk9XCJzbmFja0JhclJlZi5kaXNtaXNzKClcIj5cbiAgICAgIDxtYXQtaWNvbj5jbG9zZTwvbWF0LWljb24+XG4gICAgPC9idXR0b24+XG4gIDwvZGl2PlxuPC9kaXY+XG4iXX0=