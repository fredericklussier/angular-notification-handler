import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
// TODO: Log error to the server like Rollbar or Crashlytics
// TODO: treat the stack when error occurs
// TODO: set the application name
export class LoggingService {
    logError(message) {
        console.error(this.formatMessage(message));
    }
    logWarning(message) {
        console.warn(this.formatMessage(message));
    }
    logInformation(message) {
        console.log(`Info: ${this.formatMessage(message)}`);
    }
    logIt(message) {
        console.log(this.formatMessage(message));
    }
    formatMessage(message) {
        const now = new Date();
        return `${now.toLocaleString()}: LoggingService: ${message}`;
    }
}
LoggingService.ɵfac = function LoggingService_Factory(t) { return new (t || LoggingService)(); };
LoggingService.ɵprov = i0.ɵɵdefineInjectable({ token: LoggingService, factory: LoggingService.ɵfac });
/*@__PURE__*/ (function () { i0.ɵsetClassMetadata(LoggingService, [{
        type: Injectable
    }], null, null); })();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9nZ2luZy5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbm90aWZpY2F0aW9uLWhhbmRsZXIvc3JjL2xpYi9mZWF0dXJlLWxvZy9sb2dnaW5nLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQzs7QUFFM0MsNERBQTREO0FBQzVELDBDQUEwQztBQUMxQyxpQ0FBaUM7QUFHakMsTUFBTSxPQUFPLGNBQWM7SUFDekIsUUFBUSxDQUFDLE9BQWU7UUFDdEIsT0FBTyxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUM7SUFDN0MsQ0FBQztJQUVELFVBQVUsQ0FBQyxPQUFlO1FBQ3hCLE9BQU8sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDO0lBQzVDLENBQUM7SUFFRCxjQUFjLENBQUMsT0FBZTtRQUM1QixPQUFPLENBQUMsR0FBRyxDQUFDLFNBQVMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxPQUFPLENBQUMsRUFBRSxDQUFDLENBQUM7SUFDdEQsQ0FBQztJQUVELEtBQUssQ0FBQyxPQUFlO1FBQ25CLE9BQU8sQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDO0lBQzNDLENBQUM7SUFFTyxhQUFhLENBQUMsT0FBZTtRQUNuQyxNQUFNLEdBQUcsR0FBRyxJQUFJLElBQUksRUFBRSxDQUFDO1FBQ3ZCLE9BQU8sR0FBRyxHQUFHLENBQUMsY0FBYyxFQUFFLHFCQUFxQixPQUFPLEVBQUUsQ0FBQztJQUMvRCxDQUFDOzs0RUFwQlUsY0FBYztzREFBZCxjQUFjLFdBQWQsY0FBYztrREFBZCxjQUFjO2NBRDFCLFVBQVUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbi8vIFRPRE86IExvZyBlcnJvciB0byB0aGUgc2VydmVyIGxpa2UgUm9sbGJhciBvciBDcmFzaGx5dGljc1xuLy8gVE9ETzogdHJlYXQgdGhlIHN0YWNrIHdoZW4gZXJyb3Igb2NjdXJzXG4vLyBUT0RPOiBzZXQgdGhlIGFwcGxpY2F0aW9uIG5hbWVcblxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIExvZ2dpbmdTZXJ2aWNlIHtcbiAgbG9nRXJyb3IobWVzc2FnZTogc3RyaW5nKTogdm9pZCB7XG4gICAgY29uc29sZS5lcnJvcih0aGlzLmZvcm1hdE1lc3NhZ2UobWVzc2FnZSkpO1xuICB9XG5cbiAgbG9nV2FybmluZyhtZXNzYWdlOiBzdHJpbmcpOiB2b2lkIHtcbiAgICBjb25zb2xlLndhcm4odGhpcy5mb3JtYXRNZXNzYWdlKG1lc3NhZ2UpKTtcbiAgfVxuXG4gIGxvZ0luZm9ybWF0aW9uKG1lc3NhZ2U6IHN0cmluZyk6IHZvaWQge1xuICAgIGNvbnNvbGUubG9nKGBJbmZvOiAke3RoaXMuZm9ybWF0TWVzc2FnZShtZXNzYWdlKX1gKTtcbiAgfVxuXG4gIGxvZ0l0KG1lc3NhZ2U6IHN0cmluZyk6IHZvaWQge1xuICAgIGNvbnNvbGUubG9nKHRoaXMuZm9ybWF0TWVzc2FnZShtZXNzYWdlKSk7XG4gIH1cblxuICBwcml2YXRlIGZvcm1hdE1lc3NhZ2UobWVzc2FnZTogc3RyaW5nKTogc3RyaW5nIHtcbiAgICBjb25zdCBub3cgPSBuZXcgRGF0ZSgpO1xuICAgIHJldHVybiBgJHtub3cudG9Mb2NhbGVTdHJpbmcoKX06IExvZ2dpbmdTZXJ2aWNlOiAke21lc3NhZ2V9YDtcbiAgfVxufVxuIl19