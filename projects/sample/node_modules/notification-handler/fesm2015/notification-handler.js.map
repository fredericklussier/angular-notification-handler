{"version":3,"file":"notification-handler.js","sources":["../../../projects/notification-handler/src/lib/feature-log/logging.service.ts","../../../projects/notification-handler/src/lib/feature-notify/notification-handler/notification-handler.component.html","../../../projects/notification-handler/src/lib/feature-notify/notification-handler/notification-handler.component.ts","../../../projects/notification-handler/src/lib/feature-notify/notifycation-style.enum.ts","../../../projects/notification-handler/src/lib/feature-notify/notification.service.ts","../../../projects/notification-handler/src/lib/notification-handler-facade.service.ts","../../../projects/notification-handler/src/lib/notification-handler.module.ts","../../../projects/notification-handler/src/public-api.ts","../../../projects/notification-handler/src/notification-handler.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n// TODO: Log error to the server like Rollbar or Crashlytics\n// TODO: treat the stack when error occurs\n// TODO: set the application name\n\n@Injectable()\nexport class LoggingService {\n  logError(message: string): void {\n    console.error(this.formatMessage(message));\n  }\n\n  logWarning(message: string): void {\n    console.warn(this.formatMessage(message));\n  }\n\n  logInformation(message: string): void {\n    console.log(`Info: ${this.formatMessage(message)}`);\n  }\n\n  logIt(message: string): void {\n    console.log(this.formatMessage(message));\n  }\n\n  private formatMessage(message: string): string {\n    const now = new Date();\n    return `${now.toLocaleString()}: LoggingService: ${message}`;\n  }\n}\n","<div class=\"container\">\n  <div style=\"margin-left: 8px; margin-right: 8px;\">\n    {{ data.message }}\n  </div>\n  <div *ngIf=\"data.allowDismiss\" class=\"dismiss\">\n    <button mat-mini-fab (click)=\"snackBarRef.dismiss()\">\n      <mat-icon>close</mat-icon>\n    </button>\n  </div>\n</div>\n","import { Component, Inject } from '@angular/core';\nimport {\n  MatSnackBarRef,\n  MAT_SNACK_BAR_DATA,\n} from '@angular/material/snack-bar';\nimport { NotificationInfo } from '../notification-Info.interface';\n\n// TODO ngMAterial change the way to work with color (.inform => background-color: primary; )\n@Component({\n  selector: 'ngy-notification-handler',\n  templateUrl: './notification-handler.component.html',\n  styleUrls: ['./notification-handler.component.scss'],\n})\nexport class NotificationHandlerComponent {\n\n  constructor(\n    public snackBarRef: MatSnackBarRef<NotificationHandlerComponent>,\n    @Inject(MAT_SNACK_BAR_DATA) public data: NotificationInfo\n  ) {}\n}\n","export enum NotificationStyle {\n  default = 'default-notification-overlay',\n  error = 'error-notification-overlay',\n  success = 'success-notification-overlay',\n  info = 'info-notification-overlay',\n  warn = 'warning-notification-overlay',\n}\n","import { Injectable } from '@angular/core';\nimport { NotificationInfo } from './notification-Info.interface';\nimport { MatSnackBar } from '@angular/material//snack-bar';\nimport { NotificationHandlerComponent } from './notification-handler/notification-handler.component';\nimport { NotificationStyle } from './notifycation-style.enum';\n\nconst dismissibleNotificationStyle = [\n  NotificationStyle.error,\n  NotificationStyle.warn,\n];\n\n@Injectable()\nexport class NotificationService {\n  constructor(private snackBar: MatSnackBar) {}\n\n  notify(notificationInfo: NotificationInfo): void {\n    const data = this.setDateWithDefault(notificationInfo);\n    const options = this.setOptionsWithDefault(notificationInfo);\n\n    this.snackBar.openFromComponent(NotificationHandlerComponent, {\n      data,\n      ...options,\n    });\n  }\n\n  private setDateWithDefault(notificationInfo: NotificationInfo): any {\n    return {\n      message: notificationInfo.message,\n      allowDismiss: notificationInfo.allowDismiss || dismissibleNotificationStyle.toString().includes(notificationInfo.kind),\n    };\n  }\n\n  private setOptionsWithDefault(\n    notificationInfo: NotificationInfo\n  ): any {\n    const options = {\n      ...{\n        duration: 2500,\n        ...notificationInfo.options,\n      },\n    };\n    options.panelClass = notificationInfo.kind\n      ? [notificationInfo.kind]\n      : [NotificationStyle.default];\n\n    options.panelClass = notificationInfo.options?.panelClass\n      ? [...options.panelClass, ...notificationInfo.options.panelClass]\n      : options.panelClass;\n\n    return options;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { LoggingService } from './feature-log';\nimport { NotificationService, NotificationInfo } from './feature-notify';\n\n@Injectable()\nexport class NotificationHandlerFacadeService {\n\n  constructor(\n    private loggingService: LoggingService,\n    private notificationService: NotificationService\n  ) {}\n\n  /**\n   * LoggingService\n   */\n  logInformation(message: string): any  {\n    return this.loggingService.logInformation(message);\n  }\n\n  logError(message: string): void  {\n    return this.loggingService.logError(message);\n  }\n\n  logWarning(message: string): void  {\n    return this.loggingService.logWarning(message);\n  }\n\n  logIt(message: string): void  {\n    return this.loggingService.logIt(message);\n  }\n\n  /**\n   * NotificationService\n   */\n\n  notify(notificationInfo: NotificationInfo): void  {\n    return this.notificationService.notify(notificationInfo);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { NotificationHandlerComponent } from './feature-notify/notification-handler/notification-handler.component';\nimport { GlobalErrorHandler } from './global-error-handler';\nimport { NotificationHandlerFacadeService } from './notification-handler-facade.service';\nimport { LoggingService } from './feature-log';\nimport { NotificationService } from './feature-notify';\nimport { MatButtonModule } from '@angular/material/button';\n\n@NgModule({\n  declarations: [\n    NotificationHandlerComponent\n  ],\n  imports: [\n    CommonModule,\n    MatSnackBarModule,\n    MatButtonModule,\n    MatIconModule,\n\n  ],\n  providers: [\n    LoggingService,\n    NotificationService,\n    NotificationHandlerFacadeService\n  ],\n  exports: [ ],\n  entryComponents: [NotificationHandlerComponent]\n})\nexport class NotificationHandlerModule { }\n","/*\n * Public API Surface of notification-handler\n */\n\nexport * from './lib/notification-handler-facade.service';\nexport {\n  NotificationStyle,\n  NotificationInfo as NotificationHandlerInfo,\n} from './lib/feature-notify';\nexport * from './lib/notification-handler.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i0.ɵɵelementStart","i0.ɵɵlistener","i0.ɵɵtext","i0.ɵɵelementEnd","i0.ɵɵtemplate","i0.ɵɵadvance","i0.ɵɵtextInterpolate1","i0.ɵɵproperty"],"mappings":"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"}